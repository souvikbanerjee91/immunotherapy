library(R2OpenBUGS)
library(survival)
library(survminer)

i=5
s=list()
d=list()
s[[1]]=c(rnorm(10,90,20))
  d[[1]]=c(rbinom(10,1,0.40))
s[[2]]=c(rnorm(10,80,20))
  d[[2]]=c(rbinom(10,1,0.50))
s[[3]]=c(rnorm(10,70,20))
  d[[3]]=c(rbinom(10,1,0.55))
s[[4]]=c(rnorm(10,60,20))
  d[[4]]=c(rbinom(10,1,0.60))
s[[5]]=c(rnorm(10,50,20))  
  d[[5]]=c(rbinom(10,1,0.70))
  
#z=combn(1:i,2)
  
#for(j in 1:dim(z)[2])
#{
  #s1=s[[z[,j][1]]]
  #s2=s[[z[,j][2]]]
for(j in 1:5)
{
  s1=s[[j]]
    t.obs=s1
    t.cen=s1
    for(k in 1:nrow(data1))
    {
      if(d1[k]==1){
        t.cen[k]=0
      }
      else{
        t.obs[k]=NA
      }
    }
    data1=data.frame(t.obs,t.cen)
    
#Data
data=list(k=nrow(data1),
     t.obs=data1$t.obs,
     t.cen=data1$t.cen)

#inits
inits=list(t.obs=c(NA,100,100,NA,100),
     p.mu=rbeta(1,0.5,0.5),p.sigma=rbeta(1,0.5,0.5))

#parameters
parameters=c("p.mu","p.sigma","t.obs")

comparison.sim<-bugs(data,inits, model.file = "model.txt",parameters.to.save =parameters,
                     n.chains=3,n.iter=1000,n.burnin= 500,debug=TRUE)
}

z=rep(0:4,each=10)
forestdf=data.frame(c(s[[1]],s[[2]],s[[3]],s[[4]],s[[5]]),c(d[[1]],d[[2]],d[[3]],d[[4]],d[[5]]),z)
colnames(forestdf)=c("duration","death","dose")
HR=c()
lower_int=c()
upper_int=c()
for(i in 1:4)
{
  hrdata=forestdf[forestdf$dose==0 | forestdf$dose==i,]
  surv_object<-Surv(time=hrdata$duration,event=hrdata$death)
  #fit1<-survfit(surv_object~dose,data=hrdata)
  fit2<-coxph(surv_object~factor(dose),data=hrdata)
  HR=c(HR, summary(fit2)$coefficients[1])
  lower_int=c(lower_int, summary(fit2)$coefficients[3])
  upper_int=c(upper_int, summary(fit2)$coefficients[4])
}
#ggforest(fit2,data=hrdata)
surv_object<-Surv(time=forestdf$duration,event=forestdf$death)
fit2<-coxph(Surv(forestdf$duration,forestdf$death)~factor(dose),data=forestdf)

########## 1st way #########################

forestdf$newvar<-NA
forestdf[which(forestdf$dose==0),"newvar"]<-"100"
forestdf[which(forestdf$dose==1),"newvar"]<-"80"
forestdf[which(forestdf$dose==2),"newvar"]<-"60"
forestdf[which(forestdf$dose==3),"newvar"]<-"40"
forestdf[which(forestdf$dose==4),"newvar"]<-"20"
forestdf$newvar<-factor(forestdf$newvar)
testfit<-coxph(Surv(duration,death)~newvar,data=forestdf)
ggforest(testfit,data=forestdf)

######### 2nd way ###############################

immuno_data <- 
      data.frame(
         HR  = c(NA, 1, 1.629, 1.29, 1.552, 1.672), 
         lower = c( NA,1, 0.3612, 0.5785, 0.949, 1.176),
        upper = c( NA,1, 7.347, 2.879, 2.538, 2.377),
    stringsAsFactors=FALSE)
  
tabletext<-cbind(
    c("dose", "100", "80", "60", 
      "40", "20"),
    c("Deaths", "4", "4", 
      "3", "5", "8"),
    c("HR", "1", "1.629", 
      "1.29", "1.552", "1.672"))
  
forestplot(tabletext, 
          immuno_data,new_page = TRUE,
          xlog=TRUE, 
          clip=c(0.3,4),
          col=fpColors(box="darkblue",lines="royalblue"))
